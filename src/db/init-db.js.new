const { query } = require('./mariadb-config');

// Función para inicializar la base de datos
async function initializeDatabase() {
  try {
    console.log('Conexión a MariaDB establecida correctamente');
    
    // Crear la base de datos si no existe
    await query('CREATE DATABASE IF NOT EXISTS operator_insight');
    console.log('Base de datos "operator_insight" creada o ya existente');
    
    // Usar la base de datos
    await query('USE operator_insight');
    console.log('Usando base de datos "operator_insight"');
    
    // Crear la tabla TLV1_Status
    await query(`
      CREATE TABLE IF NOT EXISTS TLV1_Status (
        id INT AUTO_INCREMENT PRIMARY KEY,
        modo VARCHAR(50),
        ocupacion BOOLEAN,
        averia BOOLEAN,
        matricula VARCHAR(50),
        pasillo_actual INT,
        x_actual FLOAT,
        y_actual FLOAT,
        z_actual FLOAT,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
      )
    `);
    console.log('Tabla "TLV1_Status" creada o ya existente');
    
    // Verificar si ya existen datos en la tabla TLV1_Status
    const [rows] = await query('SELECT COUNT(*) as count FROM TLV1_Status');
    
    if (rows[0].count === 0) {
      // Insertar datos de ejemplo para TLV1_Status
      await query(`
        INSERT INTO TLV1_Status (modo, ocupacion, averia, matricula, pasillo_actual, x_actual, y_actual, z_actual)
        VALUES ('Automático', FALSE, FALSE, 'TLV1-001', 1, 10.5, 5.2, 3.0)
      `);
      console.log('Datos de ejemplo para TLV1_Status insertados correctamente');
    } else {
      console.log('Ya existen datos en la tabla TLV1_Status, omitiendo inserción de datos de ejemplo');
    }
    
    console.log('Inicialización de la base de datos completada con éxito');
    return true;
  } catch (error) {
    console.error('Error al inicializar la base de datos:', error);
    return false;
  }
}

module.exports = {
  initializeDatabase
};
